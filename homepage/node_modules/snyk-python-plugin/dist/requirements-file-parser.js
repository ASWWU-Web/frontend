"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
/**
 * Converts a requirements file into an array of parsed requirements, with data
 * such as name, version, etc.
 * @param requirementsFile A requirements.txt file as a string
 */
function parseRequirementsFile(requirementsFile) {
    return requirementsFile.split('\n').map((requirementText, line) => {
        const requirement = { originalText: requirementText, line };
        const trimmedText = requirementText.trim();
        // Quick returns for cases we cannot remediate
        // - Empty line i.e. ''
        // - 'editable' packages i.e. '-e git://git.myproject.org/MyProject.git#egg=MyProject'
        // - Comments i.e. # This is a comment
        // - Local files i.e. file:../../lib/project#egg=MyProject
        if (requirementText === '' ||
            trimmedText.startsWith('-e') ||
            trimmedText.startsWith('#') ||
            trimmedText.startsWith('file:')) {
            return requirement;
        }
        // Regex to match against a Python package specifier. Any invalid lines (or
        // lines we can't handle) should have been returned this point.
        const regex = /([A-Z0-9]*)(!=|==|>=|<=|>|<|~=)(\d*\.?\d*\.?\d*)(.*)/i;
        const result = regex.exec(requirementText);
        if (result !== null) {
            requirement.name = result[1];
            requirement.versionComparator = result[2];
            requirement.version = result[3];
            requirement.extras = result[4];
        }
        return requirement;
    });
}
exports.parseRequirementsFile = parseRequirementsFile;
//# sourceMappingURL=requirements-file-parser.js.map